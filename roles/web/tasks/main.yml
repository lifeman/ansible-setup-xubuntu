---

- name: Apache2 | Install required packages
  apt: pkg=apache2 state=installed
  tags: apache2

- name: Apache2 | Active module rewrite
  command: a2enmod rewrite
  tags: apache2
  notify: Restart apache

- name: Apache2 | Add vhost for project adst
  template: src=vhost-sf2.conf.j2 dest=/etc/apache2/sites-available/{{ web.domain }}.conf
  tags: apache2

- name: Apache2 | Activate vhost
  command: a2ensite {{ web.domain }}.conf
  tags: apache2
  notify: Restart apache

- name: Apache2 | Remove default configuration
  file: state=absent path=/etc/apache2/sites-enabled/000-default
  notify:
    - Restart apache

# This role deploys the MariaDB processes and sets up settings.

- name: MariaDB | Add keys authenticity
  apt_key: keyserver=keyserver.ubuntu.com id=0xcbcb082a1bb943db state=present

- name: MariaDB | Add source sources
  apt_repository: repo='deb [arch=amd64,i386] http://mirror6.layerjet.com/mariadb/repo/10.1/ubuntu {{ ansible_distribution_release }} main' update_cache=yes

- name: MariaDB | Install Packages
  apt: pkg={{ item }} state=installed
  with_items:
    - mariadb-server
    - mariadb-client
    - libmariadbclient18
    - python-mysqldb
    - python-mysql.connector
  notify: Start mariadb

- name: MariaDB | Test
  shell: ls /root/.my.cnf | wc -l
  register: database_config

# - name: MariaDB | Update mysql root password for all root accounts from local servers
#   mysql_user: login_user=root
#               login_password={{ mariadb.current_password }}
#               name=root
#               host={{ item }}
#               password={{ mariadb.root_password }}
#               priv=*.*:ALL,GRANT
#   with_items:
#     - "{{ ansible_hostname }}"
#     - 127.0.0.1
#     - ::1
#     - localhost
# #  when: database_config == 0
#   notify: Restart mariadb

- name: MariaDB | Write file my.cnf
  template: src=my.cnf.j2 dest=/root/.my.cnf owner=root mode=0600

- name: MariaDB | Write file my.cnf
  template: src=my.cnf.j2 dest={{ ansible_env.HOME }}/.my.cnf owner={{ ansible_env.LOGNAME }} mode=0600

#- name: MariaDB | Remove the MySQL test database
#  mysql_db: db=test state=absent

# This role deploys the PHP5 processes and sets up settings.

- name: PHP5 | Install required packages.
  action: apt pkg={{ item }} state=installed
  with_items:
    - php5
    - php5-dev
    - php-pear
    - php5-ldap
    - php5-curl
    - php5-intl
    - php5-cli
    - php5-xdebug
    - php5-mysql
    - php5-json
  tags: php5
  notify: Restart apache

- name: PHP5 | Configuration /etc/php5/apache2/php.ini
  template: src=etc-php5-apache2-php-ini.j2 dest=/etc/php5/apache2/php.ini mode=0644
  notify: Restart apache

- name: PHP5 | Configuration /etc/php5/cli/php.ini
  template: src=etc-php5-cli-php-ini.j2 dest=/etc/php5/cli/php.ini mode=0644

- name: PHP5 | PHPDev | Update pear channels
  command: pear update-channels

- name: PHP5 | PHPDev | Update pear packages
  command: pear upgrade-all

- name: PHP | PHPDev | Set pear auto-discover
  command: pear config-set auto_discover 1

- name: PHP | PHPDev | Pear install the PHP QA Toolchain
  command: pear install pear.phpqatools.org/phpqatools creates=/usr/bin/phpunit
  # this fails often (dns problems, pear problems, etc. So just ignore the errors and continue.)
  ignore_errors: true

# This role deploys the phpmyadmin processes and sets up settings.

- name: Phpmyadmin | Install Phpmyadmin
  apt: pkg=phpmyadmin state=present
  notify: Restart apache

- name: Phpmyadmin | Add symlink for phpmyadmin
  file: src=/usr/share/phpmyadmin dest=/var/www/phpmyadmin state=link
